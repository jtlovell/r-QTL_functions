diff.gene.expression.atmarker<-function(geneexp=geneexp,
                                        physpos.gene=physpos.gene,
                                        marker.chr=marker.chr,
                                        cross=cross){
  out<-data.frame()
  cat("running differential gene expression analysis, gene by gene","\n")
  to.print<-seq(from=1000, to= 25000, by=4000)
  for (i in 1:(length(colnames(geneexp))-5)){
    if(i %in% to.print){cat("gene",i,"of",length(colnames(geneexp)),"...")}
    exp.in<-geneexp[,c(1:5,(i+5))]
    gene.name<-colnames(geneexp[(i+5)])
    gene.bp<-physpos.gene[physpos.gene$Gene==gene.name,]
    if(is.finite(gene.bp$Loc)){
      marker.chr<-physpos.marker[physpos.marker$Chr==gene.bp$Chr,]
      marker.name<-data.frame(marker.chr[which(abs(marker.chr$Col.Phys.Pos-gene.bp$Loc)==
                                                 min(abs(marker.chr$Col.Phys.Pos-gene.bp$Loc))),])
      #add allele data of nearest marker to gene expression
      geno<-pull.genoprob(cross, marker.chr$Chr[1])
      geno<-data.frame(geno[,paste(as.character(marker.name[1,1]),"AA",sep=":")])
      colnames(geno)<-as.character(marker.name[1,1])
      geno[geno>.1 & geno <.90]<-NA
      geno<-cbind(idnames,as.data.frame(ifelse(geno>=.90,"AA","BB")))
      colnames(geno)[2:3]<-c("line","geno")
      exp.geno<-merge(exp.in,geno,by="line"); colnames(exp.geno)[6]<-"exp"
      #fit the model
      test1<-aov(exp ~ geno + cyto + treatment, data=exp.geno)
      pvals<-summary(test1)[[1]][["Pr(>F)"]][1:3]
      out.aov<-data.frame(gene.name,as.character(marker.name[1,1]),
                          as.numeric(gene.bp[1,2]),as.numeric(gene.bp[1,3]),
                          find.markerpos(cross,as.character(marker.name[1,1]))$pos,
                          pvals[1],pvals[2],pvals[3])
      names(out.aov)<-c("gene.id","marker.id","chromosome","pos.bp","pos.cm",
                        "p.geno","p.cyto","p.trt")
      rownames(out.aov)<-i-5
      out<-rbind(out,out.aov)
    }
  }
  all.anova<-out
  qvals<-data.frame(rownames(all.anova))
  for (i in c("p.geno","p.cyto","p.trt")){
    q.out<-as.numeric(qvalue(all.anova[,i])$qvalue)
    qvals<-cbind(qvals,as.data.frame(q.out))
  }
  return(all.anova)
}
